apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pds.fullname" . }}
  labels:
    {{- include "pds.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "pds.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "pds.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "pds.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: generate-pds-admin-pw
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.keygen.image.repository }}:{{ .Values.keygen.image.tag }}"
          imagePullPolicy: {{ .Values.keygen.imagePullPolicy }}
          command: ["python", "keygen.py", "--generate", "hex", "--secret-name", '{{ include "pds.fullname" . }}-auth', "--namespace", "{{ .Release.Namespace }}", "--secret-data-name", "pds-admin-pw" ]
        - name: generate-pds-jwt-secret
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.keygen.image.repository }}:{{ .Values.keygen.image.tag }}"
          imagePullPolicy: {{ .Values.keygen.imagePullPolicy }}
          command: ["python", "keygen.py", "--generate", "hex", "--secret-name", '{{ include "pds.fullname" . }}-auth', "--namespace", "{{ .Release.Namespace }}", "--secret-data-name", "pds-jwt-secret" ]
        - name: generate-pds-repo-signing-key
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.keygen.image.repository }}:{{ .Values.keygen.image.tag }}"
          imagePullPolicy: {{ .Values.keygen.imagePullPolicy }}
          command: ["python", "keygen.py", "--generate", "ecparam", "--secret-name", '{{ include "pds.fullname" . }}-auth', "--namespace", "{{ .Release.Namespace }}", "--secret-data-name", "pds-repo-signing-key" ]
        - name: generate-pds-plc-rotation-key
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.keygen.image.repository }}:{{ .Values.keygen.image.tag }}"
          imagePullPolicy: {{ .Values.keygen.imagePullPolicy }}
          command: ["python", "keygen.py", "--generate", "ecparam", "--secret-name", '{{ include "pds.fullname" . }}-auth', "--namespace", "{{ .Release.Namespace }}", "--secret-data-name", "pds-plc-rotation-key" ]
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:          
            - name: PDS_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  key:  pds-admin-pw
                  name: {{ .Release.Name }}-auth
            - name: PDS_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  key:  pds-jwt-secret
                  name: {{ .Release.Name }}-auth
            - name: PDS_REPO_SIGNING_KEY_K256_PRIVATE_KEY_HEX
              valueFrom:
                secretKeyRef:
                  key:  pds-repo-signing-key
                  name: {{ .Release.Name }}-auth
            - name: PDS_PLC_ROTATION_KEY_K256_PRIVATE_KEY_HEX
              valueFrom:
                secretKeyRef:
                  key:  pds-plc-rotation-key
                  name: {{ .Release.Name }}-auth
          envFrom:
            - configMapRef:
                name: {{ include "pds.fullname" . }}
          volumeMounts:
            - name: {{ include "pds.fullname" . }}-data
              mountPath: /pds
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: {{ include "pds.fullname" . }}-data
          persistentVolumeClaim:
            claimName: {{ include "pds.fullname" . }}
